From 4dd432d921c4b2a6a7af92f6deae647a8ab37bb2 Mon Sep 17 00:00:00 2001
From: Tim Wilkinson <tim.j.wilkinson@gmail.com>
Date: Fri, 30 Jul 2021 23:12:01 -0700
Subject: [PATCH 16/26] Allow interface to be isolated (experimental)

+ Comment

+ Rename
---
 src/cfgparser/oparse.y  | 17 +++++++++++++++++
 src/cfgparser/oscan.lex |  5 +++++
 src/generate_msg.c      |  2 +-
 src/olsr_cfg.h          |  1 +
 src/packet.c            | 13 ++++++++++---
 src/packet.h            |  2 +-
 6 files changed, 35 insertions(+), 5 deletions(-)

diff --git a/src/cfgparser/oparse.y b/src/cfgparser/oparse.y
index c311824a..5abd4a55 100644
--- a/src/cfgparser/oparse.y
+++ b/src/cfgparser/oparse.y
@@ -272,6 +272,7 @@ static int add_ipv6_addr(YYSTYPE ipaddr_arg, YYSTYPE prefixlen_arg)
 %token TOK_HNAINT
 %token TOK_HNAVAL
 %token TOK_AUTODETCHG
+%token TOK_IFISOLATED
 
 %token TOK_IPV4_ADDR
 %token TOK_IPV6_ADDR
@@ -420,6 +421,7 @@ ifstmts:   | ifstmts ifstmt
 ifstmt:      vcomment
              | iifweight
              | isetifmode
+             | isetifisolated
              | TOK_IP4BROADCAST isetipv4mc
              | TOK_IPV4BROADCAST isetipv4mc
              | TOK_IPV4MULTICAST isetipv4mc
@@ -593,6 +595,21 @@ isetifmode: TOK_IFMODE TOK_STRING
 }
 ;
 
+isetifisolated: TOK_IFISOLATED TOK_STRING
+{
+  int ifcnt = ifs_in_curr_cfg;
+  struct olsr_if *ifs = olsr_cnf->interfaces;
+	int isisolated = (strcmp($2->string, "no") == 0)?0:1;
+
+  PARSER_DEBUG_PRINTF("\tIsolated: %s\n", $2->string);
+
+	SET_IFS_CONF(ifs, ifcnt, is_isolated, isisolated);
+
+  free($2->string);
+  free($2);
+}
+;
+
 /* called if prepended with TOK_IPV4MULTICAST TOK_IP4BROADCAST TOK_IPV4BROADCAST */
 isetipv4mc: TOK_IPV4_ADDR
 {
diff --git a/src/cfgparser/oscan.lex b/src/cfgparser/oscan.lex
index 3f77e8e5..a6f8f296 100644
--- a/src/cfgparser/oscan.lex
+++ b/src/cfgparser/oscan.lex
@@ -719,6 +719,11 @@ IPV6ADDR {IPV6PAT1}|{IPV6PAT2}|{IPV6PAT3}|{IPV6PAT4}|{IPV6PAT5}|{IPV6PAT6}|{IPV6
     yylval = NULL;
     return TOK_IFMODE;
 }
+"Isolated" {
+    olsrd_config_checksum_add(yytext, yyleng);
+    yylval = NULL;
+    return TOK_IFISOLATED;
+}
 "IPv6Multicast" {
     olsrd_config_checksum_add(yytext, yyleng);
     yylval = NULL;
diff --git a/src/generate_msg.c b/src/generate_msg.c
index 243207f0..84275040 100644
--- a/src/generate_msg.c
+++ b/src/generate_msg.c
@@ -88,7 +88,7 @@ generate_tc(void *p)
   struct tc_message tcpacket;
   struct interface_olsr *ifn = (struct interface_olsr *)p;
 
-  olsr_build_tc_packet(&tcpacket);
+  olsr_build_tc_packet(&tcpacket, ifn);
 
   if (queue_tc(&tcpacket, ifn) && TIMED_OUT(ifn->fwdtimer)) {
     set_buffer_timer(ifn);
diff --git a/src/olsr_cfg.h b/src/olsr_cfg.h
index de490627..18f049ed 100644
--- a/src/olsr_cfg.h
+++ b/src/olsr_cfg.h
@@ -228,6 +228,7 @@ struct if_config_options {
   struct olsr_ip_prefix ipv6_src;
 
   int mode;
+  int is_isolated;                     /* interface is isolated from the others and will not exchange neighbors */
 
   struct olsr_if_weight weight;
   struct olsr_msg_params hello_params;
diff --git a/src/packet.c b/src/packet.c
index ad2edb92..20ca34a6 100644
--- a/src/packet.c
+++ b/src/packet.c
@@ -202,9 +202,9 @@ olsr_build_hello_packet(struct hello_message *message, struct interface_olsr *ou
   OLSR_PRINTF(5, "Not on link:\n");
 #endif /* DEBUG */
 
-  /* Add the rest of the neighbors if running on multiple interfaces */
+  /* Add the rest of the neighbors if running on multiple interfaces and this interface is not isolated */
 
-  if (ifnet != NULL && ifnet->int_next != NULL)
+  if (ifnet != NULL && ifnet->int_next != NULL && !ifnet->olsr_if->cnf->is_isolated)
     OLSR_FOR_ALL_NBR_ENTRIES(neighbor) {
 
 #ifdef DEBUG
@@ -318,10 +318,11 @@ olsr_free_tc_packet(struct tc_message *message)
  *@return 0
  */
 int
-olsr_build_tc_packet(struct tc_message *message)
+olsr_build_tc_packet(struct tc_message *message, struct interface_olsr *outif)
 {
   struct tc_mpr_addr *message_mpr;
   struct neighbor_entry *entry;
+  struct link_entry *lnk;
   bool entry_added = false;
 
   message->multipoint_relay_selector_address = NULL;
@@ -340,6 +341,12 @@ olsr_build_tc_packet(struct tc_message *message)
       continue;
     }
 
+    /* Don't include neighbors on other interfaces if this interface is isolated */
+    lnk = get_best_link_to_neighbor(&entry->neighbor_main_addr);
+    if (!lnk || (outif->olsr_if->cnf->is_isolated && outif != lnk->inter)) {
+      continue;
+    }
+
     switch (olsr_cnf->tc_redundancy) {
     case (2):
       {
diff --git a/src/packet.h b/src/packet.h
index 7dbf2d8a..a720abc0 100644
--- a/src/packet.h
+++ b/src/packet.h
@@ -125,7 +125,7 @@ int olsr_build_hello_packet(struct hello_message *, struct interface_olsr *);
 
 void olsr_free_tc_packet(struct tc_message *);
 
-int olsr_build_tc_packet(struct tc_message *);
+int olsr_build_tc_packet(struct tc_message *, struct interface_olsr *outif);
 
 void olsr_free_mid_packet(struct mid_message *);
 
-- 
2.41.0

